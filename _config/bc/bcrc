old_ibase = ibase; ibase = A
old_scale = scale; if (scale < 60) { scale = 60 }

/* Helpers for setting `ibase` and `obase`. */
base2  = 2
base8  = 8
base10 = 10
base16 = 16

/* Denotes the constant pi. */
pi = 4 * a(1)

/* Denotes the base of the natural logarithm. */
e = e(1)

/* Natural logarithm of 10. */
log_of_10 = l(10)

/* Speed of light in vacuum. */
c = 299792458

/* Magnetic constant. */
u0 = 4 * pi * (10 ^ -7)

/* Electric constant. */
e0 = 1 / (u0 * c * c)

/* Planck constant. */
h = 6.62607015 * (10 ^ -34)

/* Elementary charge. */
ec = 1.602176634 * (10 ^ -19)

/* Boltzmann constant. */
k = 1.380649 * (10 ^ -23)

/* Avogadro constant. */
na = 6.02214076 * (10 ^ 23)

ibase = old_ibase
scale = old_scale

define abs(x) {
    if (x < 0) {
        return (-x)
    }
    return (x)
}

define exp(x) {
    return (e(x))
}

define pow(x, y) {
    return (x ^ y)
}

define ln(x) {
    return (l(x))
}

define log10(x) {
    return (l(x) / log_of_10)
}

define sin(x) {
    return (s(x))
}

define cos(x) {
    return (c(x))
}

define tan(x) {
    return (s(x) / c(x))
}

define asin(x) {
    if (x == 1) {
        return (pi / 2)
    }
    if (x == -1) {
        return (-pi / 2)
    }
    return (a(x / sqrt(1 - (x * x))))
}

define acos(x) {
    if (x == 1) {
        return (0)
    }
    if (x == -1) {
        return (pi)
    }
    return (asin(sqrt(1 - (x * x))))
}

define atan(x) {
    return (a(x))
}

define sinh(x) {
    return ((e(x) - e(-x)) / 2)
}

define cosh(x) {
    return ((e(x) + e(-x)) / 2)
}

define tanh(x) {
    auto n; n = e(2 * x)
    return ((n - 1) / (n + 1))
}

define factorial(x) {
    auto i, result; result = 1

    for (i = 1; i <= x; i++) {
        result *= i
    }
    return (result)
}
